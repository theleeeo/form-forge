// @generated by protoc-gen-connect-es v1.5.0 with parameter "target=ts"
// @generated from file form/v1/forms.proto (package form.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateRequest, CreateResponse, GetByIdRequest, GetByIdResponse, GetQuestionsRequest, GetQuestionsResponse, ListRequest, ListResponse, UpdateRequest, UpdateResponse } from "./forms_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service form.v1.FormService
 */
export const FormService = {
  typeName: "form.v1.FormService",
  methods: {
    /**
     * @generated from rpc form.v1.FormService.GetById
     */
    getById: {
      name: "GetById",
      I: GetByIdRequest,
      O: GetByIdResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc form.v1.FormService.Create
     */
    create: {
      name: "Create",
      I: CreateRequest,
      O: CreateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc form.v1.FormService.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updating the form will create a new version of the form with its contents
     * being the provided form
     *
     * @generated from rpc form.v1.FormService.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc form.v1.FormService.GetQuestions
     */
    getQuestions: {
      name: "GetQuestions",
      I: GetQuestionsRequest,
      O: GetQuestionsResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

